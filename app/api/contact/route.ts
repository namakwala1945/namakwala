import { NextResponse } from "next/server";
import nodemailer from "nodemailer";

export const runtime = "nodejs"; // ensure Node runtime (not Edge) for Nodemailer

type Body = {
  name: string;
  countryCode: string;
  phone: string;
  email: string;
  message: string;
};

// very small HTML escape to avoid breaking your email templates
const esc = (s: string) =>
  s.replace(/[&<>"']/g, (c) => ({ "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" }[c]!));

function adminHtml(data: Body) {
  return `
  <div style="font-family:Arial,Helvetica,sans-serif;font-size:14px;line-height:1.6">
    <h2 style="margin:0 0 12px">New Contact Form Submission</h2>
    <p><b>Name:</b> ${esc(data.name)}</p>
    <p><b>Phone:</b> ${esc(data.countryCode)} ${esc(data.phone)}</p>
    <p><b>Email:</b> ${esc(data.email)}</p>
    <p><b>Message:</b><br>${esc(data.message).replace(/\n/g,"<br>")}</p>
    <hr>
    <p style="color:#666">This email was generated by your website contact form.</p>
  </div>
  `;
}

function userHtml(data: Body) {
  return `
  <div style="font-family:Arial,Helvetica,sans-serif;font-size:14px;line-height:1.6">
    <p>Hi ${esc(data.name)},</p>
    <p>Thank you for contacting <b>${process.env.MAIL_FROM_NAME || "Our Team"}</b>. We’ve received your message and will get back to you shortly.</p>
    <p><b>Your message:</b></p>
    <blockquote style="margin:0;border-left:3px solid #eee;padding-left:12px;color:#333">${esc(data.message).replace(/\n/g,"<br>")}</blockquote>
    <p style="margin-top:16px">Regards,<br>${esc(process.env.MAIL_FROM_NAME || "Team")}</p>
  </div>
  `;
}

export async function POST(req: Request) {
  try {
    const body = (await req.json()) as Partial<Body>;

    // Basic validation
    if (
      !body.name ||
      !body.countryCode ||
      !body.phone ||
      !body.email ||
      !body.message
    ) {
      return NextResponse.json({ ok: false, error: "Missing fields" }, { status: 400 });
    }

    const data: Body = {
      name: body.name.trim(),
      countryCode: body.countryCode.trim(),
      phone: String(body.phone).trim(),
      email: body.email.trim(),
      message: body.message.trim(),
    };

    // Create transporter
    const transporter = nodemailer.createTransport({
      host: process.env.SMTP_HOST,
      port: Number(process.env.SMTP_PORT || 465),
      secure: String(process.env.SMTP_SECURE || "true") === "true",
      auth: {
        user: process.env.SMTP_USER,
        pass: process.env.SMTP_PASS,
      },
    });

    const fromName = process.env.MAIL_FROM_NAME || "Website";
    const from = `"${fromName}" <${process.env.SMTP_USER}>`;

    // 1) Send to admin(s)
    await transporter.sendMail({
      from,
      to: process.env.ADMIN_EMAILS, // comma-separated list from .env
      replyTo: data.email, // so you can reply directly to the user
      subject: "New Contact Form Submission",
      html: adminHtml(data),
      text: `New contact submission
          Name: ${data.name}
          Phone: ${data.countryCode} ${data.phone}
          Email: ${data.email}
          Message:
          ${data.message}`,
    });

    // 2) Auto-reply to user
    await transporter.sendMail({
      from,
      to: data.email,
      subject: "We received your message",
      html: userHtml(data),
      text: `Hi ${data.name},

      Thank you for contacting ${fromName}. We’ve received your message and will get back to you shortly.

      Your message:
      ${data.message}

      Regards,
      ${fromName}
      `,
    });

        return NextResponse.json({ ok: true });
      } catch (err) {
        console.error("Contact API error:", err);
        return NextResponse.json({ ok: false, error: "Email failed" }, { status: 500 });
      }
    }
