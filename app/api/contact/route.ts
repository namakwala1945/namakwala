import { NextResponse } from "next/server";
import { Resend } from "resend";
import { parsePhoneNumberFromString } from "libphonenumber-js";

export const runtime = "nodejs"; // stay on Node runtime

type Body = {
  name: string;
  phone: string; // full international number
  email: string;
  message: string;
};

// small HTML escape
const esc = (s: string) =>
  s.replace(/[&<>"']/g, (c) => ({ "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" }[c]!));

function adminHtml(data: Body) {
  return `
  <div style="font-family:Arial,Helvetica,sans-serif;font-size:14px;line-height:1.6">
    <h2 style="margin:0 0 12px">New Contact Form Submission</h2>
    <p><b>Name:</b> ${esc(data.name)}</p>
    <p><b>Phone:</b> ${esc(data.phone)}</p>
    <p><b>Email:</b> ${esc(data.email)}</p>
    <p><b>Message:</b><br>${esc(data.message).replace(/\n/g,"<br>")}</p>
    <hr>
    <p style="color:#666">This email was generated by your website contact form.</p>
  </div>
  `;
}

function userHtml(data: Body) {
  return `
  <div style="font-family:Arial,Helvetica,sans-serif;font-size:14px;line-height:1.6">
    <p>Hi ${esc(data.name)},</p>
    <p>Thank you for contacting <b>${process.env.MAIL_FROM_NAME || "Our Team"}</b>. We’ve received your message and will get back to you shortly.</p>
    <p><b>Your message:</b></p>
    <blockquote style="margin:0;border-left:3px solid #eee;padding-left:12px;color:#333">${esc(data.message).replace(/\n/g,"<br>")}</blockquote>
    <p style="margin-top:16px">Regards,<br>${esc(process.env.MAIL_FROM_NAME || "Team")}</p>
  </div>
  `;
}

const resend = new Resend(process.env.RESEND_API_KEY as string);

export async function POST(req: Request) {
  try {
    const body = (await req.json()) as Partial<Body>;

    // Basic validation
    if (!body.name || !body.phone || !body.email || !body.message) {
      return NextResponse.json({ ok: false, error: "Missing fields" }, { status: 400 });
    }

    // Validate phone number
    const phoneNumber = parsePhoneNumberFromString(body.phone);
    if (!phoneNumber || !phoneNumber.isValid()) {
      return NextResponse.json({ ok: false, error: "Invalid phone number" }, { status: 400 });
    }

    const data: Body = {
      name: body.name.trim(),
      phone: phoneNumber.formatInternational(),
      email: body.email.trim(),
      message: body.message.trim(),
    };

    const fromName = process.env.MAIL_FROM_NAME || "Website";
    const adminEmails = process.env.ADMIN_EMAILS?.split(",").map(e => e.trim()).filter(Boolean) || [];

    // 1) Send to admin(s)
    await resend.emails.send({
      from: `${fromName} <onboarding@resend.dev>`, // must be verified in Resend
      to: adminEmails,
      replyTo: data.email,
      subject: "New Contact Form Submission",
      html: adminHtml(data),
      text: `New contact submission
Name: ${data.name}
Phone: ${data.phone}
Email: ${data.email}
Message:
${data.message}`,
    });

    // 2) Auto-reply to user
    await resend.emails.send({
      from: `${fromName} <onboarding@resend.dev>`,
      to: data.email,
      subject: "We received your message",
      html: userHtml(data),
      text: `Hi ${data.name},

Thank you for contacting ${fromName}. We’ve received your message.

Your message:
${data.message}

Regards,
${fromName}`,
    });

    return NextResponse.json({ ok: true });
  } catch (err: any) {
    console.error("Contact API error:", err);
    return NextResponse.json({ ok: false, error: err.message || "Email failed" }, { status: 500 });
  }
}
